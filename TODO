// TODO: Finish adding html pages
// [ ] plant.html page that displays information for specific plant

// TODO: Make all hrefs in html buttons
// [x] index.html login button
// [x] index.html create account button
// [x] createAccount.html create account button
// [x] user.html change password button
// [x] user.html logout button
// [x] changepass.html change password button

// TODO: Create routes to access various pages
// [x] navigate to home.html
// [x] navigate to createAccount.html
// [x] navigate to user.html from home.html user icon
// [x] navigate to changepass.html

// TODO: Add routing to access different pages through buttons
// [ ] navigate to createAccount.html from index.html create account button
// [ ] navigate to home.html from index.html login button
// [ ] navigate to home.html from createAccount.html create account button
// [ ] navigate to user.html from home.html user icon
// [ ] navigate to changepass.html from user.html change password button
// [ ] navigate to index.html from user.html logout button
// [ ] navigate to index.html (or home.html) from changepass.html change password button

// TODO: Login feature @Juliana
// [x] Check existing user by username in database
//     [x] If user does not exist send error message
// [x] Check that password matches username
//     [x] If password is incorrect send error message
// [x] Make sure new user can create an account
//     [x] Name fits constraints
//         [x] If issue with name send error message
//     [x] Username fits constraints
//         [x] If issue with username send error message
//     [x] Password fits constraints
//         [x] If issue with password send error message
//     [x] Check existing user by username in database
//         [x] If user already exist send error message
//     [x] Add new user information to useraccount table
//     [x] Notify user their account has been created and that they can now login
// [ ] Make sure existing user can update password
//     [ ] See if old password matches password currently in database
//         [ ] If old password does not match, send error message
//     [ ] Update new password to match user input
//         [ ] Make sure password is updated in database

// TODO: Like feature @Julie
// [ ] Ensure user can click ‘Like’ button on a specific plant
//     [ ] Add plant to ‘Likes’ table with user who is logged in and the plantID
//     [ ] Change button icon to filled star
// [ ] Add plant to the user’s ‘Liked’ section of their profile
//     [ ] Create a table with all the plants the user has liked
// [ ] Allow user to unlike a plant
//     [ ] When button is clicked again, remove the plant from ‘Likes’ table
//     [ ] Change button icon to empty star
//     [ ] Keep track of a flag variable that will tell if the ‘Like’ button is clicked or not

// TODO: Comments feature @Julie or @Juliana
// [ ] User can type a message in textbox and click ‘Post’
//     [ ] If content inappropriate based on censorship trigger, send error message
// [ ] Make posts available to all users
// [ ] Posts will record user and the content of the post
//     [ ] Ensure title of post and content of post are filled out, otherwise give an error

// TODO: Search feature @Adhiraj or @Khushita
// [ ] When for search :
//     [x] User can directly hit search, the temp. Humidity, water, brightness parameters will be selected as default what we have set and selected results will be shown
//     [x] User can only change one filer and select ‘any’ option in other filters and generate the results
//     [x] Same thing as above step user can do it with 2 or 3 filters and put 4th filter option as ‘any’

// TODO: Best Rootz feature @Adhiraj or @Khushita
// [x] Best Rootz is plant with max number of likes
// [x] All users can see details of Best Rootz
// [x] Clicking on Best Rootz directs user to that plant's page
